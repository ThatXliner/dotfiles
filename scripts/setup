#!/usr/bin/env bash

install_antidote() {
    git clone --depth=1 https://github.com/mattmc3/antidote.git ${ZDOTDIR:-$HOME}/.antidote
}
reset_zshrc() {
    echo "source $HOME/dotfiles/zshrc/index.zsh" > ~/.zshrc
    source ~/.zshrc
}
install_homebrew() {
    if command -v brew &> /dev/null
    then
        echo "Homebrew already installed"
        return
    fi
    echo "Installing homebrew"
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
}
setup_homebrew() {
    (echo; echo 'eval "$(/opt/homebrew/bin/brew shellenv)"') >> ~/.zprofile
    eval "$(/opt/homebrew/bin/brew shellenv)"
    cd ~/dotfiles && brew bundle install
    /opt/homebrew/opt/fzf/install
}
install_pipx() {
    if command -v pipx &> /dev/null
    then
        return
    fi
    pip install pipx
    pipx install pipx
    pip uninstall pipx --yes
}
setup_pipx() {
    cat $HOME/dotfiles/requirements.txt | xargs -n 1 pipx install
}
install_asdf() {
    git clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.13.1
}
setup_asdf() {
    asdf plugin add python
    asdf install python latest
    asdf global python latest
    asdf install python latest:3.11  # For pipx for now

    asdf plugin add nodejs
    asdf install nodejs latest
    asdf global nodejs latest

    asdf plugin-add direnv
    asdf direnv setup --shell zsh --version system
    asdf global direnv system
}
install_js_stuff() {
    curl -fsSL https://get.pnpm.io/install.sh | sh -
    curl -fsSL https://bun.sh/install | bash
}
setup_js_stuff() {
    pnpm install -g node-gyp  # XXX
    pnpm install-completion zsh
    bun add --global trash-cli
}
setup_vim() {
    curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    ln -s .vimrc ~/.vimrc
}
install_rust() {
    # Rustup > asdf
    curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
}
setup_config() {
    # Git aliases
    git config --global alias.aliases 'config --get-regexp alias'
    git config --global alias.abort-merge 'reset --hard HEAD'
    git config --global alias.uncommit 'reset --soft HEAD^'
    git config --global alias.unstage 'reset --'
    # alias.cleanup-branches !curl -s https://raw.githubusercontent.com/paulmillr/dotfiles/master/git-extras/git-cleanup.rb | ruby -
    # alias.reset-to-remote reset --hard @{u}
    # alias.l log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all

    # Use multiline prompt
    ln -s ~/dotfiles/prompts/multi.zsh ~/.p10k.zsh

    ln -s ~/dotfiles/.vimrc ~/.vimrc

    echo "[global]\nload_dotenv = true" > ~/.config/direnv/direnv.toml

    setup_js_stuff
    setup_vim
}
install_custom_direnv() {
    git clone --depth=1 https://github.com/ThatXliner/direnv.git ~/temp
    cd ~/temp
    git switch support-extra-env-files
    make
    mkdir -p ~/bin
    cp direnv ~/bin/direnv
    rm -rf ~/temp
}
# TODO: download the visual stuff too
main() {
    # Remove "last login" message
    touch ~/.hushlogin
    # Install Xcode command line tools
    xcode-select --install || echo "Xcode already set up!"
    # Clone my dotfiles
    git clone --depth=1 https://github.com/ThatXliner/dotfiles.git ~/dotfiles
    install_asdf
    install_antidote
    install_homebrew
    setup_homebrew
    gum confirm "Please install Go from https://go.dev before continuing"
    install_custom_direnv
    setup_asdf
    reset_zshrc

    install_pipx
    install_js_stuff
    reset_zshrc

    setup_config
    reset_zshrc
}
main
